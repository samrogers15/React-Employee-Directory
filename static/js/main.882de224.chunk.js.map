{"version":3,"sources":["Components/JumboTron.js","Components/SearchBar.js","Components/EmployeeTable.js","App.js","reportWebVitals.js","index.js"],"names":["JumboTron","Jumbotron","SearchBar","search","setSearchState","Form","Group","Label","Control","type","placeholder","value","onChange","target","EmployeeRow","picture","name","email","dob","phone","location","id","src","thumbnail","alt","first","last","date","age","city","state","EmployeeTable","useState","employees","setEmployeesState","useEffect","fetch","then","res","json","results","searchString","str","match","toLowerCase","indexOf","Table","striped","bordered","hover","filter","map","i","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.882de224.chunk.js","sourcesContent":["import React from \"react\";\nimport { Jumbotron } from 'react-bootstrap';\n\nconst JumboTron = () => {\n  return (\n    <Jumbotron>\n      <h1>Sam Rogers LLC Employee Directory</h1>\n      <p>\n        Welcome to the employee directory for Sam Rogers LLC. This application was designed for a member of the HR team to easily search information on current employees. Utilize the search bar below to search for a specific employee by name, email address, or location.\n      </p>\n    </Jumbotron>\n  );\n};\n\nexport default JumboTron;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst SearchBar = ({ search, setSearchState }) => {\n  return (\n    <>\n      <Form>\n        <Form.Group>\n          <Form.Label>Employee Search</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter search criteria here to search for an employee\"\n            value={search}\n            onChange={({ target }) => setSearchState(target.value)}\n          />\n        </Form.Group>\n      </Form>\n    </>\n  );\n};\n\nexport default SearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nconst EmployeeTable = ({ search }) => {\n  const [employees, setEmployeesState] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://randomuser.me/api/?results=100&nat=nz\")\n      .then((res) => res.json())\n      .then((res) => {\n        setEmployeesState(res.results);\n      });\n  }, []);\n\n  const searchString = (str, match) =>\n    str.toLowerCase().indexOf(match.toLowerCase()) !== -1;\n\n  const searchStringHandler = ({ name, email, location }) =>\n    !search ||\n    searchString(name.first, search) ||\n    searchString(name.last, search) ||\n    searchString(email, search) ||\n    searchString(location.city, search) ||\n    searchString(location.state, search);\n\n  return (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th>Picture</th>\n          <th>Name</th>\n          <th>Email</th>\n          <th>DOB</th>\n          <th>Age</th>\n          <th>Phone Number</th>\n          <th>Location</th>\n          <th>ID#</th>\n        </tr>\n      </thead>\n      <tbody>\n        {employees\n          .filter(searchStringHandler)\n          .map(({ picture, name, email, dob, phone, location, id }, i) => (\n            <EmployeeRow\n              picture={picture}\n              name={name}\n              email={email}\n              dob={dob}\n              phone={phone}\n              location={location}\n              id={id}\n              i={i}\n            />\n          ))}\n      </tbody>\n    </Table>\n  );\n};\n\nconst EmployeeRow = ({ picture, name, email, dob, phone, location, id }) => (\n  <tr>\n    <td>\n      <img src={picture.thumbnail} alt=\"employee thumbnail\" />\n    </td>\n    <td>\n      {name.first} {name.last}\n    </td>\n    <td>{email}</td>\n    <td>{dob.date}</td>\n    <td>{dob.age}</td>\n    <td>{phone}</td>\n    <td>\n      {location.city}, {location.state}\n    </td>\n    <td>{id.value}</td>\n  </tr>\n);\n\nexport default EmployeeTable;\n","import React, { useState } from \"react\";\nimport JumboTron from \"./Components/JumboTron\";\nimport SearchBar from \"./Components/SearchBar\";\nimport EmployeeTable from \"./Components/EmployeeTable\";\nimport \"./App.css\";\n\nfunction App() {\n  const [search, setSearchState] = useState(\"\");\n\n  return (\n    <>\n      <div id='container'>\n        <JumboTron />\n        <SearchBar search={search} setSearchState={setSearchState} />\n        <EmployeeTable search={search} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}